@page "/EditSuplidor"
@page "/EditSuplidor/{SuplidorId:int}"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject SuplidorService suplidorservice
@inject DialogService dialogService
<RadzenDialog @rendermode="RenderMode.InteractiveServer"></RadzenDialog>
<RadzenNotification @rendermode="RenderMode.InteractiveServer"></RadzenNotification>

<PageTitle>Edición de Suplidores</PageTitle>
<EditForm Model="suplidor" OnValidSubmit="MostrarDialogoGuardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h3>Editar Suplidor</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col col-6">
                    <label>Nombre:</label>
                    <InputText @bind-Value="suplidor.Nombre" class="form-control"></InputText>
                    <ValidationMessage For="(() => suplidor.Nombre)"></ValidationMessage>
                </div>
                <div class="col col-6">
                    <label>Fecha del Registro:</label>
                    <InputDate @bind-Value="suplidor.FechaRegistro" class="form-control"></InputDate>
                    <ValidationMessage For="(() => suplidor.FechaRegistro)"></ValidationMessage>
                </div>
            </div>

            <div class="row">
                <div class="col col-6">
                    <label>RNC:</label>
                    <InputText @bind-Value="suplidor.RNC" class="form-control"></InputText>
                    <ValidationMessage For="@(() => suplidor.RNC)" />
                </div>
                <div class="col col-6">
                    <label>Tel&eacute;fono:</label>
                    <InputText @bind-Value="suplidor.Telefono" class="form-control"></InputText>
                    <ValidationMessage For="(() => suplidor.Telefono)"></ValidationMessage>
                </div>
            </div>
            <div class="row">
                <div class="col col-6">
                    <label>Email:</label>
                    <InputText @bind-Value="suplidor.Email" class="form-control"></InputText>
                    <ValidationMessage For="(() => suplidor.Email)"></ValidationMessage>
                </div>
                <div class="col col-6">
                    <label>Direcci&oacuten:</label>
                    <InputText @bind-Value="suplidor.Direccion" class="form-control"></InputText>
                    <ValidationMessage For="@(() => suplidor.Direccion)" />
                </div>
            </div>
        </div>
        <div class="card-footer">
            <div class="input-group">
                <a href="/IndexSuplidor" class="btn btn-outline-danger bi bi-arrow-return-left"> Volver</a>
                <button type="submit" class="btn btn-outline-success bi bi-floppy-fill"> Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int SuplidorId { get; set; }
    public Suplidores suplidor { get; set; } = new Suplidores();

    protected override async Task OnInitializedAsync()
    {
        if (SuplidorId > 0)
        {
            this.suplidor.SuplidorId = SuplidorId;
            await this.Buscar();
        }

        suplidor.FechaRegistro = DateTime.Now;
    }

    public async Task Buscar()
    {
        var suplidorEncontrado = await suplidorservice.Buscar(suplidor.SuplidorId);

        if (suplidorEncontrado != null)
        {
            this.suplidor = suplidorEncontrado;
        }
    }

    public async Task Guardar()
    {
        var guardo = await suplidorservice.Guardar(suplidor);
        if (guardo)
            Atras();
    }

    public async Task MostrarDialogoGuardar()
    {
        var result = await dialogService.Confirm("¿Está seguro que desea guardar los cambios en este cliente?", "Confirmar Edici&oacute;n");

        if (result.GetValueOrDefault())
        {
            await Guardar();
        }
    }

    void Atras()
    {
        Navigation.NavigateTo("/IndexSuplidor");
    }
}