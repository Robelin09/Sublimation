@page "/ViewUsuario"
@page "/ViewUsuario/{UsuarioId:int}"
@inject UsuarioService usuarioservice
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Ver Usuario</PageTitle>
<div class="card">
    <div class="card-header bg-primary text-light">
        <h1 class="mb-0">Detalles del Usuario</h1>
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">ClienteId:</dt>
            <dd class="col-sm-9">@usuario.UsuarioId</dd>

            <dt class="col-sm-3">Nombre:</dt>
            <dd class="col-sm-9">@usuario.Nombre</dd>

            <dt class="col-sm-3">T&eacute;lefono:</dt>
            <dd class="col-sm-9">@usuario.Telefono</dd>

            <dt class="col-sm-3">C&eacute;dula:</dt>
            <dd class="col-sm-9">@usuario.Cedula</dd>

            <dt class="col-sm-3">Email:</dt>
            <dd class="col-sm-9">@usuario.Email</dd>

            <dt class="col-sm-3">Direcci&oacute;n:</dt>
            <dd class="col-sm-9">@usuario.Direccion</dd>

            <dt class="col-sm-3">Cargo:</dt>
            <dd class="col-sm-9">@usuario.Cargo</dd>

            <dt class="col-sm-3">Fecha del Registro:</dt>
            <dd class="col-sm-9">@usuario.FechaRegistro.ToString("dd/MM/yyyy")</dd>
        </dl>
    </div>
    <div class="card-footer">
        <a href="/IndexUsuario" class="btn btn-outline-primary bi bi bi-arrow-return-left"> Volver</a>
    </div>
</div>

@code {
    [Parameter]
    public int UsuarioId { get; set; }
    public Usuarios usuario { get; set; } = new Usuarios();

    protected override async Task OnInitializedAsync()
    {
        if (UsuarioId > 0)
        {
            usuario.UsuarioId = UsuarioId;
            await this.Buscar();
        }
    }
    public async Task Buscar()
    {
        var clienteEncontrado = await usuarioservice.Buscar(usuario.UsuarioId);

        if (clienteEncontrado != null)
        {
            this.usuario = clienteEncontrado;
        }
    }
}
