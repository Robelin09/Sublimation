@page "/ViewServicio"
@page "/ViewServicio/{ServicioId:int}"
@inject ServicioService servicioservice
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Ver Servicio</PageTitle>

<div class="card">
    <div class="card-header bg-primary text-light">
        <h1 class="mb-0">Detalles del Servicio</h1>
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">ServicioId:</dt>
            <dd class="col-sm-9">@servicio.ServicioId</dd>

            <dt class="col-sm-3">Fecha del Registro:</dt>
            <dd class="col-sm-9">@servicio.FechaRegistro.ToString("dd/MM/yyyy")</dd>

            <dt class="col-sm-3">Tipo de Servicio:</dt>
            <dd class="col-sm-9">@servicio.TipoServicio</dd>

            <dt class="col-sm-3">Descripci&oacute;n:</dt>
            <dd class="col-sm-9">@servicio.Descripcion</dd>

            <dt class="col-sm-3">Costo del Servicio:</dt>
            <dd class="col-sm-9">@servicio.CostoServicio.ToString("N2")</dd>
        </dl>
    </div>
    <div class="card-footer">
        <a href="/IndexServicio" class="btn btn-outline-danger bi bi bi-arrow-return-left"> Volver</a>
    </div>
</div>

@code {
    [Parameter]
    public int ServicioId { get; set; }
    public Servicios servicio { get; set; } = new Servicios();

    protected override async Task OnInitializedAsync()
    {
        if (ServicioId > 0)
        {
            servicio.ServicioId = ServicioId;
            await this.Buscar();
        }
    }
    public async Task Buscar()
    {
        var servicioEncontrado = await servicioservice.Buscar(servicio.ServicioId);

        if (servicioEncontrado != null)
        {
            this.servicio = servicioEncontrado;
        }
    }
}
