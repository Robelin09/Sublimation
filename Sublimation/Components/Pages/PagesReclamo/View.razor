@page "/ViewReclamo"
@page "/ViewReclamo/{ReclamoId:int}"
@inject NavigationManager Navigation
@inject ReclamoService reclamoservice
@rendermode InteractiveServer
@inject ClienteService clienteservice

<div class="card">
    <div class="card-header bg-primary text-light">
        <h1 class="mb-0">Detalles del Reclamo</h1>
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">ReclamoId:</dt>
            <dd class="col-sm-9">@reclamo.ReclamoId</dd>

            <dt class="col-sm-3">Fecha del Reclamo:</dt>
            <dd class="col-sm-9">@reclamo.FechaReclamo.ToString("dd/MM/yyyy")</dd>

            <dt class="col-sm-3">Factura Id:</dt>
            <dd class="col-sm-9">@reclamo.VentaId</dd>

            <dt class="col-sm-3">Cliente:</dt>
            <dd class="col-sm-9">@ObtenerNombreCliente(reclamo.ClienteId)</dd>

            <dt class="col-sm-3">Descripci&oacute;n:</dt>
            <dd class="col-sm-9">@reclamo.Descripcion</dd>

            <dt class="col-sm-3">Acci&oacute;n Tomada:</dt>
            <dd class="col-sm-9">@reclamo.AccionTomada</dd>
        </dl>
    </div>
    <div class="card-footer">
        <a href="/IndexReclamo" class="btn btn-outline-primary bi bi bi-arrow-return-left"> Volver</a>
    </div>
</div>

@code {
    [Parameter]
    public int ReclamoId { get; set; }
    public Reclamos reclamo { get; set; } = new Reclamos();
    public List<Clientes> ListaClientes { get; set; } = new List<Clientes>();

    protected override async Task OnInitializedAsync()
    {
        if (ReclamoId > 0)
        {
            reclamo.ReclamoId = ReclamoId;
            await this.Buscar();
        }
        ListaClientes = await clienteservice.Listar(t => true);

    }

    public async Task Buscar()
    {
        var reclamoEncontrado = await reclamoservice.Buscar(reclamo.ReclamoId);

        if (reclamoEncontrado != null)
        {
            this.reclamo = reclamoEncontrado;
        }
    }

    public string ObtenerNombreCliente(int cliente)
    {
        var Nombre = ListaClientes.FirstOrDefault(c => c.ClienteId == cliente);
        return Nombre != null ? Nombre.Nombre : string.Empty;
    }
}
